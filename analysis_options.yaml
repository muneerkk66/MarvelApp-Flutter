# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml
analyzer:
  language:
    strict-casts: true
    strict-raw-types: true
    # Explanation: https://dash-overflow.net/articles/getting_started/
  errors:
    # treat missing required parameters as an error (not a hint)
    missing_required_param: error
    # treat missing returns as an error (not a hint)
    missing_return: error
    invalid_annotation_target: ignore
  exclude:
    - lib/**/*.g.dart
    - lib/*.g.dart
    - lib/**/*.gen.dart
    - lib/**/*.freezed.dart

linter:
  rules:
    avoid_dynamic_calls: true
    prefer_const_constructors: false # This should be enabled for most of the time, if it's not too much irritating
    prefer_const_declarations: false
    use_key_in_widget_constructors: false
    sort_child_properties_last: true
    prefer_final_in_for_each: true
    prefer_final_locals: true
    avoid_void_async: true
    unnecessary_parenthesis: true
    always_declare_return_types: true
    unawaited_futures: true
    only_throw_errors: true
    missing_whitespace_between_adjacent_strings: true

    # To consider:
    avoid_function_literals_in_foreach_calls: false

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
